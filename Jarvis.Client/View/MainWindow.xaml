<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
    xmlns:Engine="clr-namespace:WPFLocalizeExtension.Engine;assembly=WPFLocalizeExtension"
        xmlns:Providers="clr-namespace:WPFLocalizeExtension.Providers;assembly=WPFLocalizeExtension"
        xmlns:lex="clr-namespace:WPFLocalizeExtension.Extensions;assembly=WPFLocalizeExtension"
        Engine:LocalizeDictionary.DesignCulture="it"
        Providers:ResxLocalizationProvider.DefaultAssembly="Jarvis.Client"
        Providers:ResxLocalizationProvider.DefaultDictionary="Localization.MainWindow"   
        x:Class="Jarvis.Client.View.MainWindow" x:Name="JarvisMainWindow" Background="{DynamicResource WindowBackgroundBrush}" Title="{lex:Loc}" xmlns:my="clr-namespace:Jarvis.Client"
        xmlns:View="clr-namespace:Jarvis.Client.View" Loaded="JarvisMainWindow_Loaded" MinWidth="640" MinHeight="410" Width="640" Height="410" WindowStyle="ThreeDBorderWindow">

	<DockPanel DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
		<Menu  DockPanel.Dock="Top">
            <MenuItem x:Name="FileMenu" Header="{lex:Loc}">
                <MenuItem Name="ExitMenuItem" Header="{lex:Loc}" Command="{StaticResource ExitCommand}"/>
            </MenuItem>
            <MenuItem x:Name="EditMenu" Header="{lex:Loc}">
                <MenuItem x:Name="CutMenuItem" Header="{lex:Loc}" Command="Cut" />
                <MenuItem x:Name="CopyMenuItem"   Header="{lex:Loc}" Command="Copy"/>
                <MenuItem x:Name="PasteMenuItem"  Header="{lex:Loc}" Command="Paste"/>
                    
                
            </MenuItem>
            <MenuItem x:Name="LanguageMenu" Header="{lex:Loc}" ItemsSource="{Binding CultureMenuViewModel.CultureMenuItems}" IsChecked="False" IsCheckable="False">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" >
                        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="HighlightedOn">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="HightlightedOff">
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0" Margin="3,2,3,2">
                                        <Grid Margin="0,0,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                                <ColumnDefinition Width="14" />
                                            </Grid.ColumnDefinitions>
                                            <Border Grid.Column="0" Grid.ColumnSpan="4" Background="{DynamicResource HoverBrush}" Opacity="0" x:Name="HoverBorder" CornerRadius="1,1,1,1"/>
                                            <Border Grid.ColumnSpan="4" Background="{DynamicResource HoverShineBrush}" Opacity="0" x:Name="HoverShineBorder" CornerRadius="1,1,1,1"/>
                                            <ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" />
                                            <Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight" />
                                            </Grid>
                                            <ContentPresenter Grid.Column="1" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" Margin="2,1,2,1" />
                                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
                                            </Grid>
                                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                                <Grid x:Name="SubMenu">
                                                    <Border x:Name="SubMenuBorder" Background="{DynamicResource LightBrush}" BorderThickness="1" Opacity="0.8">
                                                        <Border.BorderBrush>
                                                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                                        </Border.BorderBrush>
                                                    </Border>
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                </Grid>
                                            </Popup>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Role" Value="TopLevelHeader">
                                            <Setter Property="Margin" Value="0,1,0,1" />
                                            <Setter Property="Padding" Value="6,3,6,3" />
                                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                                        </Trigger>
                                        <Trigger Property="Role" Value="TopLevelItem">
                                            <Setter Property="Margin" Value="0,1,0,1" />
                                            <Setter Property="Padding" Value="6,3,6,3" />
                                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                                        </Trigger>
                                        <Trigger Property="Role" Value="SubmenuHeader">
                                            <Setter Property="DockPanel.Dock" Value="Top" />
                                            <Setter Property="Padding" Value="0,2,0,2" />
                                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                                        </Trigger>
                                        <Trigger Property="Role" Value="SubmenuItem">
                                            <Setter Property="DockPanel.Dock" Value="Top" />
                                            <Setter Property="Padding" Value="0,2,0,2" />
                                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                                        </Trigger>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                                        </Trigger>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                                        </Trigger>
                                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" />
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Trigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource HightlightedOff}" x:Name="HightlightedOff_BeginStoryboard"/>
                                            </Trigger.ExitActions>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource HighlightedOn}"/>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="IsChecked" Value="{Binding Path=IsChecked}"/>
                        <Setter Property="Header" Value="{Binding Path=Header}"/>
                        <Setter Property="Command" Value="{Binding Source={StaticResource Locator}, Path=Main.CultureMenuViewModel.SelectCulture}"/>
                        <Setter Property="CommandParameter" Value="{Binding}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem> 
        </Menu>
		<TabControl TabStripPlacement="Left" DataContext="{Binding Source={StaticResource Locator}}">
			<TabItem>
				<TabItem.Header>
					<Grid Width="100" Height="100" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<RotateTransform Angle="90"/>
						</Grid.RenderTransform>
						<Label HorizontalAlignment="Center" VerticalAlignment="Bottom" Content="Manage Locations" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}"/>
						<Image Source="/Icons/Globe.png" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20"/>
					</Grid>
				</TabItem.Header>
                <View:ManageLocationsUC DataContext="{Binding Source={StaticResource Locator}, Path=ManageLocations}" d:LayoutOverrides="Width"/>
			</TabItem>
			<TabItem>
				<TabItem.Header>
					<Grid Width="100" Height="100" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<RotateTransform Angle="90"/>
						</Grid.RenderTransform>
						<Label Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Content="Locate Me!"/>
						<Image Source="/Icons/Pin.png"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="15"/>
					</Grid>
				</TabItem.Header>
                <View:LocateMeUC DataContext="{Binding LocateMe, Mode=OneWay}"/>
			</TabItem>
			<TabItem>
				<TabItem.Header>
					<Grid Width="100" Height="100" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<RotateTransform Angle="90"/>
						</Grid.RenderTransform>
						<Label Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Content="Statistics"/>
						<Image Source="/Icons/Chart.png"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="15"/>
					</Grid>
				</TabItem.Header>
				<Grid Background="#FFE5E5E5"/>
			</TabItem>
		</TabControl>
	</DockPanel>
</Window>
